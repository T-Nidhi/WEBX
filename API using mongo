(do terminal commands first)
**********index.js**********
const express = require('express');
const mongoose = require('mongoose');
const Student = require('./models/Student');
const app = express();
// MongoDB Connection
mongoose.connect('mongodb://localhost:27017/studentDB', {
    useNewUrlParser: true,
    useUnifiedTopology: true,
})
.then(() => console.log('Connected to MongoDB'))
.catch(err => console.error('MongoDB connection error:', err));

// Home Route
app.get('/', (req, res) => {
    res.send(`
        <h2>Welcome to Student API</h2>
        <ul>
            <li><a href="/add">Add Sample Student</a></li>
            <li><a href="/students">View All Students</a></li>
            <li>To delete: /delete/&lt;id&gt;</li>
        </ul>
    `);
});

// Add a student (Sample Data)
app.get('/add', async (req, res) => {
    const student = new Student({
        name: "Koustubh",
        age: 21,
        course: "Information Technology"
    });
    await student.save();
    res.send(`<p>Student Added Successfully</p><a href="/">Back</a>`);
});

// View all students
app.get('/students', async (req, res) => {
    const students = await Student.find();
    let list = students.map(s => `<li>${s.name} (${s._id})</li>`).join('');
    res.send(`<h3>All Students</h3><ul>${list}</ul><a href="/">Back</a>`);
});

// Delete a student by ID
app.get('/delete/:id', async (req, res) => {
    try {
        await Student.findByIdAndDelete(req.params.id);
        res.send(`<p>Student Deleted</p><a href="/">Back</a>`);
    } catch (err) {
        res.send(`<p>Error: ${err.message}</p><a href="/">Back</a>`);
    }
});

// Start server
app.listen(3000, () => {
    console.log('Server running at http://localhost:3000');
});

models/Student.js
const mongoose = require('mongoose');
const studentSchema = new mongoose.Schema({
    name: String,
    age: Number,
    course: String
});
module.exports = mongoose.model('Student', studentSchema);
